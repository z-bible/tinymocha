{
    "parser": "babel-eslint",
    "rules": {
        "semi": [1, "never"],
        "max-len": [1, 90],
        "max-depth": 1,
        "no-unused-vars": [1, {"argsIgnorePattern": "^_", "caughtErrorsIgnorePattern": "^_"}],
        "max-statements": [1, {"max": 10}],
        "handle-callback-err": 1,
        "no-undef": 2,
        "no-inner-declarations": [1, "functions"],
        "no-cond-assign": [1, "except-parens"],
        "no-debugger": 1,
        "no-dupe-keys": 1,
        "no-func-assign": 1,
        "no-invalid-regexp": 1,
        "no-negated-in-lhs": 1,
        "no-regex-spaces": 1,
        "quote-props": 0,
        "no-unreachable": 1,
        "use-isnan": 2,
        "valid-typeof": 1,
        "no-delete-var": 1,
        "no-label-var": 1,
        "no-shadow-restricted-names": 1,
        "no-new-require": 1,
        // specify curly brace conventions for all control statements
        "curly": [1, "multi-line"],
        // require default case in switch statements
        "default-case": 1,
        // enforces consistent newlines before or after dots
        "dot-location": 0,
        // require the use of === and !==
        "eqeqeq": 1,
        // make sure for-in loops have an if statement
        "guard-for-in": 1,
        // disallow the use of alert, confirm, and prompt
        "no-alert": 1,
        // disallow use of arguments.caller or arguments.callee
        "no-caller": 1,
        // disallow lexical declarations in case clauses
        "no-case-declarations": 1,
        // disallow division operators explicitly at beginning of regular expression
        "no-div-regex": 0,
        // disallow else after a return in an if
        "no-else-return": 1,
        // disallow use of empty destructuring patterns
        "no-empty-pattern": 0,
        // disallow comparisons to null without a type-checking operator
        "no-eq-null": 0,
        // disallow use of eval()
        "no-eval": 0,
        // disallow adding to native types
        "no-extend-native": 0,
        // disallow unnecessary function binding
        "no-extra-bind": 0,
        // disallow fallthrough of case statements
        "no-fallthrough": 0,
        // disallow the use of leading or trailing decimal points in numeric literals
        "no-floating-decimal": 0,
        // disallow the type conversions with shorter notations
        "no-implicit-coercion": 0,
        // disallow use of eval()-like methods
        "no-implied-eval": 0,
        // disallow this keywords outside of classes or class-like objects
        "no-invalid-this": 0,
        // disallow usage of __iterator__ property
        "no-iterator": 0,
        // disallow use of labeled statements
        "no-labels": [0, {"allowLoop": true, "allowSwitch": true}],
        // disallow unnecessary nested blocks
        "no-lone-blocks": 1,
        // disallow creation of functions within loops
        "no-loop-func": 1,
        // disallow use of multiple spaces
        "no-multi-spaces": 0,
        // disallow use of multiline strings
        "no-multi-str": 1,
        // disallow reassignments of native objects
        "no-native-reassign": 0,
        // disallow use of new operator for Function object
        "no-new-func": 1,
        // disallows creating new instances of String,Number, and Boolean
        "no-new-wrappers": 1,
        // disallow use of new operator when not part of the assignment or comparison
        "no-new": 0,
        // disallow use of octal escape sequences in string literals, such as
        // var foo = "Copyright \251";
        "no-octal-escape": 0,
        // disallow use of (old style) octal literals
        "no-octal": 1,
        // disallow reassignment of function parameters
        "no-param-reassign": [1, { "props": false }],
        // disallow use of process.env
        "no-process-env": 0,
        // disallow usage of __proto__ property
        "no-proto": 0,
        // disallow declaring the same variable more then once
        "no-redeclare": 2,
        // disallow use of assignment in return statement
        "no-return-assign": 1,
        // disallow use of `javascript:` urls.
        "no-script-url": 0,
        // disallow comparisons where both sides are exactly the same
        "no-self-compare": 0,
        // disallow use of comma operator
        "no-sequences": 1,
        // restrict what can be thrown as an exception
        "no-throw-literal": 1,
        // disallow usage of expressions in statement position
        "no-unused-expressions": 1,
        // disallow unnecessary .call() and .apply()
        "no-useless-call": 0,
        // disallow unnecessary concatenation of literals or template literals
        "no-useless-concat": 0,
        // disallow use of void operator
        "no-void": 0,
        // disallow usage of configurable warning terms in comments: e.g. todo
        "no-warning-comments": [1, { "terms": ["todo", "fixme", "xxx"], "location": "start" }],
        // disallow use of the with statement
        "no-with": 0,
        // require use of the second argument for parseInt()
        "radix": 2,
        // requires to declare all vars on top of their containing scope
        "vars-on-top": 0,
        // require immediate function invocation to be wrapped in parentheses
        "wrap-iife": [2, "outside"],
        // require or disallow Yoda conditions
        "yoda": 0,
    },
    "plugins": [
        "react",
        "flowtype"
    ],
    "env": {
        "browser": true,
        "mocha": true,
        "node": true,
        "es6": true,
    }
}